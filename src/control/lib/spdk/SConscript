#!/bin/env python
"""Build DAOS SPDK Go bindings"""
def scons():
    """Execute build"""
    Import('denv', 'prereqs', 'gosrc")

    denv.AppendUnique(LIBPATH=[Dir('.')])

    senv = senv.Clone()
    prereqs.require(senv, 'pmdk', 'spdk', 'ofi', 'hwloc')

    senv.AppendUnique(CPPPATH=[Dir('.'))])

    # Link to DPDK static libs
    senv.AppendUnique(LINKFLAGS=['-Wl,--whole-archive', \
                      '-lrte_mempool', '-lrte_mempool_ring', '-lrte_bus_pci', \
                      '-lrte_pci', '-lrte_ring', '-lrte_mbuf', '-lrte_eal', \
                      '-lrte_kvargs', \
                      '-Wl,--no-whole-archive'])

    # hack to avoid building this library with cov compiler for the moment
    compiler = senv.get('COMPILER').lower()
    if compiler == "covc":
        compiler = "gcc"

    nvmecontrol = senv.StaticLibrary("nvme_control",
                                     Glob("src/*.c")),
                                     CC=compiler,
                                     LIBS=['spdk', 'spdk_env_dpdk', 'numa'])

    senv.Install(join(senv.subst("$PREFIX"), "lib64"), nvmecontrol)

    SConscript('ctests/SConscript', exports='senv')

    Return('nvmecontrol')

if __name__ == "SCons.Script":
    scons()

