"""Build test suite"""
import daos_build

def scons():
    """Execute build"""
    Import('denv')

    libraries = ['daos_common', 'daos', 'dfs', 'daos_tests', 'gurt', 'cart']
    libraries += ['uuid', 'mpi', 'dfs', 'cmocka', 'pthread']

    denv.AppendUnique(LIBPATH=["$PREFIX/lib64/"])

    daos_test_tgt = denv.SharedObject(['daos_test_common.c'])
    Export('daos_test_tgt')

    daos_epoch_io = denv.SharedObject(['daos_epoch_io.c'])
    Export('daos_epoch_io')

    daos_test_obj = denv.SharedObject(['daos_obj.c'])
    Export('daos_test_obj')

    newenv = denv.Clone()
    try:
        import os
        with open('/etc/os-release') as f:
            for line in f:
                if 'ID' in line:
                    line = line.strip()
                    id, distro = line.strip().split('=')
                    break
        if distro in ['"centos"', '"rhel"', '"fedora"']:
            import rpm
            ts = rpm.TransactionSet()
            headers = ts.dbMatch('name', 'libcmocka')
            if not headers:
                print "No package libcmocka found."
            else:
                from pkg_resources import parse_version
                for h in headers:
                    if parse_version(h['version']) < parse_version('1.1.5'):
                        newenv.AppendUnique(CCFLAGS=['-DOVERRIDE_CMOCKA_SKIP'])
        elif distro in ('"debian"', '"ubuntu"'):
            import apt
            cache = apt.Cache()
            cache.open()
            instver = cache["libcmocka"].installed
            if instver:
                if parse_version(instver.version) < parse_version('1.1.5'):
                    newenv.AppendUnique(CCFLAGS=['-DOVERRIDE_CMOCKA_SKIP'])
            else:
                print "No package libcmocka found."
        else:
            print "Unable to identify distro."
    except ImportError:
        pass

    test = daos_build.program(newenv, 'daos_test', Glob('*.c'), LIBS=libraries)
    denv.Install('$PREFIX/bin/', test)
    denv.Install('$PREFIX/bin/io_conf', Glob('io_conf/daos_io_conf_1'))
    denv.Install('$PREFIX/bin/io_conf', Glob('io_conf/daos_io_conf_2'))
    denv.Install('$PREFIX/bin/io_conf', Glob('io_conf/daos_io_conf_3'))
    SConscript('io_conf/SConscript', exports='denv')

if __name__ == "SCons.Script":
    scons()
